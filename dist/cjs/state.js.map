{"version":3,"file":"state.js","sourceRoot":"","sources":["../../src/state.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAAsD;AAEtD,iCAAiE;AAEjE;;;GAGG;AACH,MAAa,gBAAgB;IAC3B,YAAY,GAKX;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CACvB,IAAI,oBAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CACzE,CAAC;QACF,IAAI,CAAC,OAAO;YACV,IAAI,oBAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,KAAK,CAAC;gBACrE,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,mBAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACnE,CAAC;IAgCD;;;OAGG;IACH,MAAM,KAAK,QAAQ;QACjB,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IACnC,CAAC;IAED;;;OAGG;IACI,MAAM,CAAO,kBAAkB,CACpC,UAAsB,EACtB,cAAyB;;;YAEzB,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,cAAc,CACjD,cAAc,EACd,WAAW,CACZ,CAAC;YACF,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO,SAAS,CAAC;aAClB;YAED,MAAM,GAAG,GAAqB,IAAA,4BAAoB,EAChD,IAAI,CAAC,MAAM,EACX,gBAAgB,EAChB,WAAW,CAAC,IAAI,CACjB,CAAC;YAEF,GAAG,CAAC,IAAI,GAAG,MAAA,WAAW,CAAC,IAAI,0CAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAErD,OAAO,GAAG,CAAC;;KACZ;IAED;;;OAGG;IACH,MAAM;;QACJ,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,OAAO;YACL,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YACtC,KAAK,EAAE,MAAA,IAAI,CAAC,KAAK,0CAAE,QAAQ,EAAE;YAC7B,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC9B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,IAAI,EAAE,IAAI,CAAC,OAAO;gBAChB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE;gBAC5C,CAAC,CAAC,SAAS;SACd,CAAC;IACJ,CAAC;;AApGH,4CAqGC;AA3EQ,8BAAa,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACpD,4BAAW,GAAG,kBAAkB,CAAC;AAExC;;GAEG;AACI,uBAAM,GAAW,IAAI,GAAG,CAAC;IAC9B;QACE,gBAAgB;QAChB;YACE,IAAI,EAAE,QAAQ;YACd,MAAM,EAAE;gBACN,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtB,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;gBACpB,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;gBACf,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;gBAChB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClB,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;aAClB;SACF;KACF;CACF,CAAC,CAAC","sourcesContent":["import {Connection, PublicKey} from '@solana/web3.js';\nimport {BN} from 'bn.js';\nimport {BinaryReader, deserializeUnchecked, Schema} from 'borsh';\n\n/**\n * Holds the data for the {@link NameRecordHeader} Account and provides de/serialization\n * functionality for that data\n */\nexport class NameRecordHeader {\n  constructor(obj: {\n    parentName: Uint8Array;\n    owner: Uint8Array;\n    nclass: Uint8Array;\n    expiresAt: Uint8Array;\n  }) {\n    this.parentName = new PublicKey(obj.parentName);\n    this.nclass = new PublicKey(obj.nclass);\n    this.expiresAt = new Date(\n      new BinaryReader(Buffer.from(obj.expiresAt)).readU64().toNumber() * 1000,\n    );\n    this.isValid =\n      new BinaryReader(Buffer.from(obj.expiresAt)).readU64().toNumber() === 0\n        ? true\n        : this.expiresAt > new Date();\n    this.owner = this.isValid ? new PublicKey(obj.owner) : undefined;\n  }\n\n  parentName: PublicKey;\n  owner: PublicKey | undefined;\n  nclass: PublicKey;\n  expiresAt: Date;\n  isValid: boolean;\n  data: Buffer | undefined;\n\n  static DISCRIMINATOR = [68, 72, 88, 44, 15, 167, 103, 243];\n  static HASH_PREFIX = 'ALT Name Service';\n\n  /**\n   * NameRecordHeader Schema across all alt name service accounts\n   */\n  static schema: Schema = new Map([\n    [\n      NameRecordHeader,\n      {\n        kind: 'struct',\n        fields: [\n          ['discriminator', [8]],\n          ['parentName', [32]],\n          ['owner', [32]],\n          ['nclass', [32]],\n          ['expiresAt', [8]],\n          ['padding', [88]],\n        ],\n      },\n    ],\n  ]);\n\n  /**\n   * Returns the minimum size of a {@link Buffer} holding the serialized data of\n   * {@link NameRecordHeader}\n   */\n  static get byteSize() {\n    return 8 + 32 + 32 + 32 + 8 + 88;\n  }\n\n  /**\n   * Retrieves the account info from the provided address and deserializes\n   * the {@link NameRecordHeader} from its data.\n   */\n  public static async fromAccountAddress(\n    connection: Connection,\n    nameAccountKey: PublicKey,\n  ): Promise<NameRecordHeader | undefined> {\n    const nameAccount = await connection.getAccountInfo(\n      nameAccountKey,\n      'confirmed',\n    );\n    if (!nameAccount) {\n      return undefined;\n    }\n\n    const res: NameRecordHeader = deserializeUnchecked(\n      this.schema,\n      NameRecordHeader,\n      nameAccount.data,\n    );\n\n    res.data = nameAccount.data?.subarray(this.byteSize);\n\n    return res;\n  }\n\n  /**\n   * Returns a readable version of {@link NameRecordHeader} properties\n   * and can be used to convert to JSON and/or logging\n   */\n  pretty() {\n    const indexOf0 = this.data.indexOf(0x00);\n    return {\n      parentName: this.parentName.toBase58(),\n      owner: this.owner?.toBase58(),\n      nclass: this.nclass.toBase58(),\n      expiresAt: this.expiresAt,\n      isValid: this.isValid,\n      data: this.isValid\n        ? this.data.subarray(0, indexOf0).toString()\n        : undefined,\n    };\n  }\n}\n"]}